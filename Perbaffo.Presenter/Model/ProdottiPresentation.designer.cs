#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Perbaffo.Presenter.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Perbaffo")]
	public partial class ProdottiPresentationDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProdCateg(ProdCateg instance);
    partial void UpdateProdCateg(ProdCateg instance);
    partial void DeleteProdCateg(ProdCateg instance);
    partial void InsertProdottiPreferiti(ProdottiPreferiti instance);
    partial void UpdateProdottiPreferiti(ProdottiPreferiti instance);
    partial void DeleteProdottiPreferiti(ProdottiPreferiti instance);
    #endregion
		
		public ProdottiPresentationDataContext() : 
				base(global::Perbaffo.Presenter.Properties.Settings.Default.PerbaffoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProdottiPresentationDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProdottiPresentationDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProdottiPresentationDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProdottiPresentationDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ProdottoImmagine> ProdottoImmagines
		{
			get
			{
				return this.GetTable<ProdottoImmagine>();
			}
		}
		
		public System.Data.Linq.Table<ProdottoNovita> ProdottoNovitas
		{
			get
			{
				return this.GetTable<ProdottoNovita>();
			}
		}
		
		public System.Data.Linq.Table<ProdCateg> ProdCategs
		{
			get
			{
				return this.GetTable<ProdCateg>();
			}
		}
		
		public System.Data.Linq.Table<ProdottiPreferiti> ProdottiPreferitis
		{
			get
			{
				return this.GetTable<ProdottiPreferiti>();
			}
		}
		
		[Function(Name="dbo.GetNewID", IsComposable=true)]
		public System.Nullable<System.Guid> GetNewID()
		{
			return ((System.Nullable<System.Guid>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
	}
	
	[Table(Name="dbo.VIEW_ProdottiImmagini")]
	[DataContract()]
	public partial class ProdottoImmagine
	{
		
		private System.Nullable<System.DateTime> _DataInserimento;
		
		private bool _Attivo;
		
		private decimal _RangeOmaggio;
		
		private bool _IsOmaggio;
		
		private decimal _Totale;
		
		private decimal _ScontoEuro;
		
		private int _ScontoPercent;
		
		private System.Nullable<int> _LivRiordino;
		
		private System.Nullable<int> _Giacenza;
		
		private System.Nullable<int> _UnitaDiMisura;
		
		private int _IDAliquotaIva;
		
		private decimal _Prezzo;
		
		private string _DescrizioneLunga;
		
		private string _Keywords;
		
		private string _Nome;
		
		private string _Codice;
		
		private int _ID;
		
		private string _UrlImmagine;
		
		private string _UrlImmagineHQ;
		
		private string _DescrImmagine;
		
		private string _DescrTaglia;
		
		public ProdottoImmagine()
		{
		}
		
		[Column(Storage="_DataInserimento", DbType="DateTime")]
		[DataMember(Order=1)]
		public System.Nullable<System.DateTime> DataInserimento
		{
			get
			{
				return this._DataInserimento;
			}
			set
			{
				if ((this._DataInserimento != value))
				{
					this._DataInserimento = value;
				}
			}
		}
		
		[Column(Storage="_Attivo", DbType="Bit NOT NULL")]
		[DataMember(Order=2)]
		public bool Attivo
		{
			get
			{
				return this._Attivo;
			}
			set
			{
				if ((this._Attivo != value))
				{
					this._Attivo = value;
				}
			}
		}
		
		[Column(Storage="_RangeOmaggio", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=3)]
		public decimal RangeOmaggio
		{
			get
			{
				return this._RangeOmaggio;
			}
			set
			{
				if ((this._RangeOmaggio != value))
				{
					this._RangeOmaggio = value;
				}
			}
		}
		
		[Column(Storage="_IsOmaggio", DbType="Bit NOT NULL")]
		[DataMember(Order=4)]
		public bool IsOmaggio
		{
			get
			{
				return this._IsOmaggio;
			}
			set
			{
				if ((this._IsOmaggio != value))
				{
					this._IsOmaggio = value;
				}
			}
		}
		
		[Column(Storage="_Totale", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=5)]
		public decimal Totale
		{
			get
			{
				return this._Totale;
			}
			set
			{
				if ((this._Totale != value))
				{
					this._Totale = value;
				}
			}
		}
		
		[Column(Storage="_ScontoEuro", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=6)]
		public decimal ScontoEuro
		{
			get
			{
				return this._ScontoEuro;
			}
			set
			{
				if ((this._ScontoEuro != value))
				{
					this._ScontoEuro = value;
				}
			}
		}
		
		[Column(Storage="_ScontoPercent", DbType="Int NOT NULL")]
		[DataMember(Order=7)]
		public int ScontoPercent
		{
			get
			{
				return this._ScontoPercent;
			}
			set
			{
				if ((this._ScontoPercent != value))
				{
					this._ScontoPercent = value;
				}
			}
		}
		
		[Column(Storage="_LivRiordino", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> LivRiordino
		{
			get
			{
				return this._LivRiordino;
			}
			set
			{
				if ((this._LivRiordino != value))
				{
					this._LivRiordino = value;
				}
			}
		}
		
		[Column(Storage="_Giacenza", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> Giacenza
		{
			get
			{
				return this._Giacenza;
			}
			set
			{
				if ((this._Giacenza != value))
				{
					this._Giacenza = value;
				}
			}
		}
		
		[Column(Storage="_UnitaDiMisura", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> UnitaDiMisura
		{
			get
			{
				return this._UnitaDiMisura;
			}
			set
			{
				if ((this._UnitaDiMisura != value))
				{
					this._UnitaDiMisura = value;
				}
			}
		}
		
		[Column(Storage="_IDAliquotaIva", DbType="Int NOT NULL")]
		[DataMember(Order=11)]
		public int IDAliquotaIva
		{
			get
			{
				return this._IDAliquotaIva;
			}
			set
			{
				if ((this._IDAliquotaIva != value))
				{
					this._IDAliquotaIva = value;
				}
			}
		}
		
		[Column(Storage="_Prezzo", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=12)]
		public decimal Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this._Prezzo = value;
				}
			}
		}
		
		[Column(Storage="_DescrizioneLunga", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=13)]
		public string DescrizioneLunga
		{
			get
			{
				return this._DescrizioneLunga;
			}
			set
			{
				if ((this._DescrizioneLunga != value))
				{
					this._DescrizioneLunga = value;
				}
			}
		}
		
		[Column(Storage="_Keywords", DbType="VarChar(50)")]
		[DataMember(Order=14)]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this._Keywords = value;
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=15)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this._Nome = value;
				}
			}
		}
		
		[Column(Storage="_Codice", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=16)]
		public string Codice
		{
			get
			{
				return this._Codice;
			}
			set
			{
				if ((this._Codice != value))
				{
					this._Codice = value;
				}
			}
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL")]
		[DataMember(Order=17)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_UrlImmagine", DbType="VarChar(200)")]
		[DataMember(Order=18)]
		public string UrlImmagine
		{
			get
			{
				return this._UrlImmagine;
			}
			set
			{
				if ((this._UrlImmagine != value))
				{
					this._UrlImmagine = value;
				}
			}
		}
		
		[Column(Storage="_UrlImmagineHQ", DbType="VarChar(200)")]
		[DataMember(Order=19)]
		public string UrlImmagineHQ
		{
			get
			{
				return this._UrlImmagineHQ;
			}
			set
			{
				if ((this._UrlImmagineHQ != value))
				{
					this._UrlImmagineHQ = value;
				}
			}
		}
		
		[Column(Storage="_DescrImmagine", DbType="VarChar(200)")]
		[DataMember(Order=20)]
		public string DescrImmagine
		{
			get
			{
				return this._DescrImmagine;
			}
			set
			{
				if ((this._DescrImmagine != value))
				{
					this._DescrImmagine = value;
				}
			}
		}
		
		[Column(Storage="_DescrTaglia", DbType="VarChar(50)")]
		[DataMember(Order=21)]
		public string DescrTaglia
		{
			get
			{
				return this._DescrTaglia;
			}
			set
			{
				if ((this._DescrTaglia != value))
				{
					this._DescrTaglia = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.VIEW_ProdottiNovita")]
	[DataContract()]
	public partial class ProdottoNovita
	{
		
		private System.Nullable<System.DateTime> _DataInserimento;
		
		private bool _Attivo;
		
		private decimal _RangeOmaggio;
		
		private bool _IsOmaggio;
		
		private decimal _Totale;
		
		private decimal _ScontoEuro;
		
		private int _ScontoPercent;
		
		private System.Nullable<int> _LivRiordino;
		
		private System.Nullable<int> _Giacenza;
		
		private System.Nullable<int> _UnitaDiMisura;
		
		private int _IDAliquotaIva;
		
		private decimal _Prezzo;
		
		private string _DescrizioneLunga;
		
		private string _Keywords;
		
		private string _Nome;
		
		private string _Codice;
		
		private int _ID;
		
		private string _UrlImmagine;
		
		private string _UrlImmagineHQ;
		
		private string _DescrImmagine;
		
		private string _DescrTaglia;
		
		public ProdottoNovita()
		{
		}
		
		[Column(Storage="_DataInserimento", DbType="DateTime")]
		[DataMember(Order=1)]
		public System.Nullable<System.DateTime> DataInserimento
		{
			get
			{
				return this._DataInserimento;
			}
			set
			{
				if ((this._DataInserimento != value))
				{
					this._DataInserimento = value;
				}
			}
		}
		
		[Column(Storage="_Attivo", DbType="Bit NOT NULL")]
		[DataMember(Order=2)]
		public bool Attivo
		{
			get
			{
				return this._Attivo;
			}
			set
			{
				if ((this._Attivo != value))
				{
					this._Attivo = value;
				}
			}
		}
		
		[Column(Storage="_RangeOmaggio", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=3)]
		public decimal RangeOmaggio
		{
			get
			{
				return this._RangeOmaggio;
			}
			set
			{
				if ((this._RangeOmaggio != value))
				{
					this._RangeOmaggio = value;
				}
			}
		}
		
		[Column(Storage="_IsOmaggio", DbType="Bit NOT NULL")]
		[DataMember(Order=4)]
		public bool IsOmaggio
		{
			get
			{
				return this._IsOmaggio;
			}
			set
			{
				if ((this._IsOmaggio != value))
				{
					this._IsOmaggio = value;
				}
			}
		}
		
		[Column(Storage="_Totale", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=5)]
		public decimal Totale
		{
			get
			{
				return this._Totale;
			}
			set
			{
				if ((this._Totale != value))
				{
					this._Totale = value;
				}
			}
		}
		
		[Column(Storage="_ScontoEuro", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=6)]
		public decimal ScontoEuro
		{
			get
			{
				return this._ScontoEuro;
			}
			set
			{
				if ((this._ScontoEuro != value))
				{
					this._ScontoEuro = value;
				}
			}
		}
		
		[Column(Storage="_ScontoPercent", DbType="Int NOT NULL")]
		[DataMember(Order=7)]
		public int ScontoPercent
		{
			get
			{
				return this._ScontoPercent;
			}
			set
			{
				if ((this._ScontoPercent != value))
				{
					this._ScontoPercent = value;
				}
			}
		}
		
		[Column(Storage="_LivRiordino", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> LivRiordino
		{
			get
			{
				return this._LivRiordino;
			}
			set
			{
				if ((this._LivRiordino != value))
				{
					this._LivRiordino = value;
				}
			}
		}
		
		[Column(Storage="_Giacenza", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> Giacenza
		{
			get
			{
				return this._Giacenza;
			}
			set
			{
				if ((this._Giacenza != value))
				{
					this._Giacenza = value;
				}
			}
		}
		
		[Column(Storage="_UnitaDiMisura", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> UnitaDiMisura
		{
			get
			{
				return this._UnitaDiMisura;
			}
			set
			{
				if ((this._UnitaDiMisura != value))
				{
					this._UnitaDiMisura = value;
				}
			}
		}
		
		[Column(Storage="_IDAliquotaIva", DbType="Int NOT NULL")]
		[DataMember(Order=11)]
		public int IDAliquotaIva
		{
			get
			{
				return this._IDAliquotaIva;
			}
			set
			{
				if ((this._IDAliquotaIva != value))
				{
					this._IDAliquotaIva = value;
				}
			}
		}
		
		[Column(Storage="_Prezzo", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=12)]
		public decimal Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this._Prezzo = value;
				}
			}
		}
		
		[Column(Storage="_DescrizioneLunga", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=13)]
		public string DescrizioneLunga
		{
			get
			{
				return this._DescrizioneLunga;
			}
			set
			{
				if ((this._DescrizioneLunga != value))
				{
					this._DescrizioneLunga = value;
				}
			}
		}
		
		[Column(Storage="_Keywords", DbType="VarChar(50)")]
		[DataMember(Order=14)]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this._Keywords = value;
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=15)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this._Nome = value;
				}
			}
		}
		
		[Column(Storage="_Codice", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=16)]
		public string Codice
		{
			get
			{
				return this._Codice;
			}
			set
			{
				if ((this._Codice != value))
				{
					this._Codice = value;
				}
			}
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL")]
		[DataMember(Order=17)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_UrlImmagine", DbType="VarChar(200)")]
		[DataMember(Order=18)]
		public string UrlImmagine
		{
			get
			{
				return this._UrlImmagine;
			}
			set
			{
				if ((this._UrlImmagine != value))
				{
					this._UrlImmagine = value;
				}
			}
		}
		
		[Column(Storage="_UrlImmagineHQ", DbType="VarChar(200)")]
		[DataMember(Order=19)]
		public string UrlImmagineHQ
		{
			get
			{
				return this._UrlImmagineHQ;
			}
			set
			{
				if ((this._UrlImmagineHQ != value))
				{
					this._UrlImmagineHQ = value;
				}
			}
		}
		
		[Column(Storage="_DescrImmagine", DbType="VarChar(200)")]
		[DataMember(Order=20)]
		public string DescrImmagine
		{
			get
			{
				return this._DescrImmagine;
			}
			set
			{
				if ((this._DescrImmagine != value))
				{
					this._DescrImmagine = value;
				}
			}
		}
		
		[Column(Storage="_DescrTaglia", DbType="VarChar(50)")]
		[DataMember(Order=21)]
		public string DescrTaglia
		{
			get
			{
				return this._DescrTaglia;
			}
			set
			{
				if ((this._DescrTaglia != value))
				{
					this._DescrTaglia = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.ProdottiCategorie")]
	[DataContract()]
	public partial class ProdCateg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDProdotto;
		
		private int _IDCategoria;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDProdottoChanging(int value);
    partial void OnIDProdottoChanged();
    partial void OnIDCategoriaChanging(int value);
    partial void OnIDCategoriaChanged();
    #endregion
		
		public ProdCateg()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_IDProdotto", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int IDProdotto
		{
			get
			{
				return this._IDProdotto;
			}
			set
			{
				if ((this._IDProdotto != value))
				{
					this.OnIDProdottoChanging(value);
					this.SendPropertyChanging();
					this._IDProdotto = value;
					this.SendPropertyChanged("IDProdotto");
					this.OnIDProdottoChanged();
				}
			}
		}
		
		[Column(Storage="_IDCategoria", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int IDCategoria
		{
			get
			{
				return this._IDCategoria;
			}
			set
			{
				if ((this._IDCategoria != value))
				{
					this.OnIDCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IDCategoria = value;
					this.SendPropertyChanged("IDCategoria");
					this.OnIDCategoriaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.ProdottiPreferiti")]
	[DataContract()]
	public partial class ProdottiPreferiti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDProdotto;
		
		private int _IDUtente;
		
		private System.DateTime _DataInserimento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDProdottoChanging(int value);
    partial void OnIDProdottoChanged();
    partial void OnIDUtenteChanging(int value);
    partial void OnIDUtenteChanged();
    partial void OnDataInserimentoChanging(System.DateTime value);
    partial void OnDataInserimentoChanged();
    #endregion
		
		public ProdottiPreferiti()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_IDProdotto", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int IDProdotto
		{
			get
			{
				return this._IDProdotto;
			}
			set
			{
				if ((this._IDProdotto != value))
				{
					this.OnIDProdottoChanging(value);
					this.SendPropertyChanging();
					this._IDProdotto = value;
					this.SendPropertyChanged("IDProdotto");
					this.OnIDProdottoChanged();
				}
			}
		}
		
		[Column(Storage="_IDUtente", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int IDUtente
		{
			get
			{
				return this._IDUtente;
			}
			set
			{
				if ((this._IDUtente != value))
				{
					this.OnIDUtenteChanging(value);
					this.SendPropertyChanging();
					this._IDUtente = value;
					this.SendPropertyChanged("IDUtente");
					this.OnIDUtenteChanged();
				}
			}
		}
		
		[Column(Storage="_DataInserimento", DbType="DateTime NOT NULL")]
		[DataMember(Order=4)]
		public System.DateTime DataInserimento
		{
			get
			{
				return this._DataInserimento;
			}
			set
			{
				if ((this._DataInserimento != value))
				{
					this.OnDataInserimentoChanging(value);
					this.SendPropertyChanging();
					this._DataInserimento = value;
					this.SendPropertyChanged("DataInserimento");
					this.OnDataInserimentoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
