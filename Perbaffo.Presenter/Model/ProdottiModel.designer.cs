#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Perbaffo.Presenter.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Perbaffo")]
	public partial class ProdottiModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProdottiAllegati(ProdottiAllegati instance);
    partial void UpdateProdottiAllegati(ProdottiAllegati instance);
    partial void DeleteProdottiAllegati(ProdottiAllegati instance);
    partial void InsertProdottiCategorie(ProdottiCategorie instance);
    partial void UpdateProdottiCategorie(ProdottiCategorie instance);
    partial void DeleteProdottiCategorie(ProdottiCategorie instance);
    partial void InsertProdottiColori(ProdottiColori instance);
    partial void UpdateProdottiColori(ProdottiColori instance);
    partial void DeleteProdottiColori(ProdottiColori instance);
    partial void InsertAliquotaIva(AliquotaIva instance);
    partial void UpdateAliquotaIva(AliquotaIva instance);
    partial void DeleteAliquotaIva(AliquotaIva instance);
    partial void InsertProdottiImmagini(ProdottiImmagini instance);
    partial void UpdateProdottiImmagini(ProdottiImmagini instance);
    partial void DeleteProdottiImmagini(ProdottiImmagini instance);
    partial void InsertOfferteTabella(OfferteTabella instance);
    partial void UpdateOfferteTabella(OfferteTabella instance);
    partial void DeleteOfferteTabella(OfferteTabella instance);
    partial void InsertProdottiFotogallery(ProdottiFotogallery instance);
    partial void UpdateProdottiFotogallery(ProdottiFotogallery instance);
    partial void DeleteProdottiFotogallery(ProdottiFotogallery instance);
    partial void InsertColori(Colori instance);
    partial void UpdateColori(Colori instance);
    partial void DeleteColori(Colori instance);
    partial void InsertProdottiTaglie(ProdottiTaglie instance);
    partial void UpdateProdottiTaglie(ProdottiTaglie instance);
    partial void DeleteProdottiTaglie(ProdottiTaglie instance);
    partial void InsertProdotti(Prodotti instance);
    partial void UpdateProdotti(Prodotti instance);
    partial void DeleteProdotti(Prodotti instance);
    partial void InsertProdottiRecensioni(ProdottiRecensioni instance);
    partial void UpdateProdottiRecensioni(ProdottiRecensioni instance);
    partial void DeleteProdottiRecensioni(ProdottiRecensioni instance);
    partial void InsertVariazioni(Variazioni instance);
    partial void UpdateVariazioni(Variazioni instance);
    partial void DeleteVariazioni(Variazioni instance);
    #endregion
		
		public ProdottiModelDataContext() : 
				base(global::Perbaffo.Presenter.Properties.Settings.Default.PerbaffoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProdottiModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProdottiModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProdottiModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProdottiModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ProdottiAllegati> ProdottiAllegatis
		{
			get
			{
				return this.GetTable<ProdottiAllegati>();
			}
		}
		
		public System.Data.Linq.Table<ProdottiCategorie> ProdottiCategories
		{
			get
			{
				return this.GetTable<ProdottiCategorie>();
			}
		}
		
		public System.Data.Linq.Table<ProdottiColori> ProdottiColoris
		{
			get
			{
				return this.GetTable<ProdottiColori>();
			}
		}
		
		public System.Data.Linq.Table<AliquotaIva> AliquotaIvas
		{
			get
			{
				return this.GetTable<AliquotaIva>();
			}
		}
		
		public System.Data.Linq.Table<ProdottiImmagini> ProdottiImmaginis
		{
			get
			{
				return this.GetTable<ProdottiImmagini>();
			}
		}
		
		public System.Data.Linq.Table<OfferteTabella> OfferteTabellas
		{
			get
			{
				return this.GetTable<OfferteTabella>();
			}
		}
		
		public System.Data.Linq.Table<ProdottiFotogallery> ProdottiFotogalleries
		{
			get
			{
				return this.GetTable<ProdottiFotogallery>();
			}
		}
		
		public System.Data.Linq.Table<Colori> Coloris
		{
			get
			{
				return this.GetTable<Colori>();
			}
		}
		
		public System.Data.Linq.Table<ProdottiTaglie> ProdottiTaglies
		{
			get
			{
				return this.GetTable<ProdottiTaglie>();
			}
		}
		
		public System.Data.Linq.Table<Prodotti> Prodottis
		{
			get
			{
				return this.GetTable<Prodotti>();
			}
		}
		
		public System.Data.Linq.Table<ProdottiRecensioni> ProdottiRecensionis
		{
			get
			{
				return this.GetTable<ProdottiRecensioni>();
			}
		}
		
		public System.Data.Linq.Table<ProdottiVariazioni> ProdottiVariazionis
		{
			get
			{
				return this.GetTable<ProdottiVariazioni>();
			}
		}
		
		public System.Data.Linq.Table<Variazioni> Variazionis
		{
			get
			{
				return this.GetTable<Variazioni>();
			}
		}
	}
	
	[Table(Name="dbo.ProdottiAllegati")]
	[DataContract()]
	public partial class ProdottiAllegati : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDProdottoPrincipale;
		
		private int _IDProdottoAllegato;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDProdottoPrincipaleChanging(int value);
    partial void OnIDProdottoPrincipaleChanged();
    partial void OnIDProdottoAllegatoChanging(int value);
    partial void OnIDProdottoAllegatoChanged();
    #endregion
		
		public ProdottiAllegati()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_IDProdottoPrincipale", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int IDProdottoPrincipale
		{
			get
			{
				return this._IDProdottoPrincipale;
			}
			set
			{
				if ((this._IDProdottoPrincipale != value))
				{
					this.OnIDProdottoPrincipaleChanging(value);
					this.SendPropertyChanging();
					this._IDProdottoPrincipale = value;
					this.SendPropertyChanged("IDProdottoPrincipale");
					this.OnIDProdottoPrincipaleChanged();
				}
			}
		}
		
		[Column(Storage="_IDProdottoAllegato", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int IDProdottoAllegato
		{
			get
			{
				return this._IDProdottoAllegato;
			}
			set
			{
				if ((this._IDProdottoAllegato != value))
				{
					this.OnIDProdottoAllegatoChanging(value);
					this.SendPropertyChanging();
					this._IDProdottoAllegato = value;
					this.SendPropertyChanged("IDProdottoAllegato");
					this.OnIDProdottoAllegatoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.ProdottiCategorie")]
	[DataContract()]
	public partial class ProdottiCategorie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDProdotto;
		
		private int _IDCategoria;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDProdottoChanging(int value);
    partial void OnIDProdottoChanged();
    partial void OnIDCategoriaChanging(int value);
    partial void OnIDCategoriaChanged();
    #endregion
		
		public ProdottiCategorie()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_IDProdotto", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int IDProdotto
		{
			get
			{
				return this._IDProdotto;
			}
			set
			{
				if ((this._IDProdotto != value))
				{
					this.OnIDProdottoChanging(value);
					this.SendPropertyChanging();
					this._IDProdotto = value;
					this.SendPropertyChanged("IDProdotto");
					this.OnIDProdottoChanged();
				}
			}
		}
		
		[Column(Storage="_IDCategoria", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int IDCategoria
		{
			get
			{
				return this._IDCategoria;
			}
			set
			{
				if ((this._IDCategoria != value))
				{
					this.OnIDCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IDCategoria = value;
					this.SendPropertyChanged("IDCategoria");
					this.OnIDCategoriaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.ProdottiColori")]
	[DataContract()]
	public partial class ProdottiColori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDProdotto;
		
		private int _IDColore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDProdottoChanging(int value);
    partial void OnIDProdottoChanged();
    partial void OnIDColoreChanging(int value);
    partial void OnIDColoreChanged();
    #endregion
		
		public ProdottiColori()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_IDProdotto", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int IDProdotto
		{
			get
			{
				return this._IDProdotto;
			}
			set
			{
				if ((this._IDProdotto != value))
				{
					this.OnIDProdottoChanging(value);
					this.SendPropertyChanging();
					this._IDProdotto = value;
					this.SendPropertyChanged("IDProdotto");
					this.OnIDProdottoChanged();
				}
			}
		}
		
		[Column(Storage="_IDColore", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int IDColore
		{
			get
			{
				return this._IDColore;
			}
			set
			{
				if ((this._IDColore != value))
				{
					this.OnIDColoreChanging(value);
					this.SendPropertyChanging();
					this._IDColore = value;
					this.SendPropertyChanged("IDColore");
					this.OnIDColoreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.AliquotaIva")]
	[DataContract()]
	public partial class AliquotaIva : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ValoreAliquotaIva;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnValoreAliquotaIvaChanging(int value);
    partial void OnValoreAliquotaIvaChanged();
    #endregion
		
		public AliquotaIva()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_ValoreAliquotaIva", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int ValoreAliquotaIva
		{
			get
			{
				return this._ValoreAliquotaIva;
			}
			set
			{
				if ((this._ValoreAliquotaIva != value))
				{
					this.OnValoreAliquotaIvaChanging(value);
					this.SendPropertyChanging();
					this._ValoreAliquotaIva = value;
					this.SendPropertyChanged("ValoreAliquotaIva");
					this.OnValoreAliquotaIvaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.ProdottiImmagini")]
	[DataContract()]
	public partial class ProdottiImmagini : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDProdotto;
		
		private string _UrlImmagine;
		
		private string _UrlImmagineHQ;
		
		private string _DescrImmagine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDProdottoChanging(int value);
    partial void OnIDProdottoChanged();
    partial void OnUrlImmagineChanging(string value);
    partial void OnUrlImmagineChanged();
    partial void OnUrlImmagineHQChanging(string value);
    partial void OnUrlImmagineHQChanged();
    partial void OnDescrImmagineChanging(string value);
    partial void OnDescrImmagineChanged();
    #endregion
		
		public ProdottiImmagini()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_IDProdotto", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int IDProdotto
		{
			get
			{
				return this._IDProdotto;
			}
			set
			{
				if ((this._IDProdotto != value))
				{
					this.OnIDProdottoChanging(value);
					this.SendPropertyChanging();
					this._IDProdotto = value;
					this.SendPropertyChanged("IDProdotto");
					this.OnIDProdottoChanged();
				}
			}
		}
		
		[Column(Storage="_UrlImmagine", DbType="VarChar(200)")]
		[DataMember(Order=3)]
		public string UrlImmagine
		{
			get
			{
				return this._UrlImmagine;
			}
			set
			{
				if ((this._UrlImmagine != value))
				{
					this.OnUrlImmagineChanging(value);
					this.SendPropertyChanging();
					this._UrlImmagine = value;
					this.SendPropertyChanged("UrlImmagine");
					this.OnUrlImmagineChanged();
				}
			}
		}
		
		[Column(Storage="_UrlImmagineHQ", DbType="VarChar(200)")]
		[DataMember(Order=4)]
		public string UrlImmagineHQ
		{
			get
			{
				return this._UrlImmagineHQ;
			}
			set
			{
				if ((this._UrlImmagineHQ != value))
				{
					this.OnUrlImmagineHQChanging(value);
					this.SendPropertyChanging();
					this._UrlImmagineHQ = value;
					this.SendPropertyChanged("UrlImmagineHQ");
					this.OnUrlImmagineHQChanged();
				}
			}
		}
		
		[Column(Storage="_DescrImmagine", DbType="VarChar(200)")]
		[DataMember(Order=5)]
		public string DescrImmagine
		{
			get
			{
				return this._DescrImmagine;
			}
			set
			{
				if ((this._DescrImmagine != value))
				{
					this.OnDescrImmagineChanging(value);
					this.SendPropertyChanging();
					this._DescrImmagine = value;
					this.SendPropertyChanged("DescrImmagine");
					this.OnDescrImmagineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.Offerte")]
	[DataContract()]
	public partial class OfferteTabella : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDProdotto;
		
		private decimal _Prezzo;
		
		private System.DateTime _DataInserimentoOfferta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDProdottoChanging(int value);
    partial void OnIDProdottoChanged();
    partial void OnPrezzoChanging(decimal value);
    partial void OnPrezzoChanged();
    partial void OnDataInserimentoOffertaChanging(System.DateTime value);
    partial void OnDataInserimentoOffertaChanged();
    #endregion
		
		public OfferteTabella()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_IDProdotto", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int IDProdotto
		{
			get
			{
				return this._IDProdotto;
			}
			set
			{
				if ((this._IDProdotto != value))
				{
					this.OnIDProdottoChanging(value);
					this.SendPropertyChanging();
					this._IDProdotto = value;
					this.SendPropertyChanged("IDProdotto");
					this.OnIDProdottoChanged();
				}
			}
		}
		
		[Column(Storage="_Prezzo", DbType="Decimal(18,2) NOT NULL")]
		[DataMember(Order=3)]
		public decimal Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[Column(Storage="_DataInserimentoOfferta", DbType="DateTime NOT NULL")]
		[DataMember(Order=4)]
		public System.DateTime DataInserimentoOfferta
		{
			get
			{
				return this._DataInserimentoOfferta;
			}
			set
			{
				if ((this._DataInserimentoOfferta != value))
				{
					this.OnDataInserimentoOffertaChanging(value);
					this.SendPropertyChanging();
					this._DataInserimentoOfferta = value;
					this.SendPropertyChanged("DataInserimentoOfferta");
					this.OnDataInserimentoOffertaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.ProdottiFotogallery")]
	[DataContract()]
	public partial class ProdottiFotogallery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDProdotto;
		
		private string _UrlImmagine;
		
		private string _DescrImmagine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDProdottoChanging(int value);
    partial void OnIDProdottoChanged();
    partial void OnUrlImmagineChanging(string value);
    partial void OnUrlImmagineChanged();
    partial void OnDescrImmagineChanging(string value);
    partial void OnDescrImmagineChanged();
    #endregion
		
		public ProdottiFotogallery()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_IDProdotto", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int IDProdotto
		{
			get
			{
				return this._IDProdotto;
			}
			set
			{
				if ((this._IDProdotto != value))
				{
					this.OnIDProdottoChanging(value);
					this.SendPropertyChanging();
					this._IDProdotto = value;
					this.SendPropertyChanged("IDProdotto");
					this.OnIDProdottoChanged();
				}
			}
		}
		
		[Column(Storage="_UrlImmagine", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string UrlImmagine
		{
			get
			{
				return this._UrlImmagine;
			}
			set
			{
				if ((this._UrlImmagine != value))
				{
					this.OnUrlImmagineChanging(value);
					this.SendPropertyChanging();
					this._UrlImmagine = value;
					this.SendPropertyChanged("UrlImmagine");
					this.OnUrlImmagineChanged();
				}
			}
		}
		
		[Column(Storage="_DescrImmagine", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string DescrImmagine
		{
			get
			{
				return this._DescrImmagine;
			}
			set
			{
				if ((this._DescrImmagine != value))
				{
					this.OnDescrImmagineChanging(value);
					this.SendPropertyChanging();
					this._DescrImmagine = value;
					this.SendPropertyChanged("DescrImmagine");
					this.OnDescrImmagineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.Colori")]
	[DataContract()]
	public partial class Colori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Descrizione;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public Colori()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Descrizione", DbType="VarChar(50)", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.ProdottiTaglie")]
	[DataContract()]
	public partial class ProdottiTaglie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDProdotto;
		
		private string _DescrTaglia;
		
		private decimal _Prezzo;
		
		private int _ScontoPerc;
		
		private decimal _ScontoEuro;
		
		private decimal _Totale;
		
		private string _Codice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDProdottoChanging(int value);
    partial void OnIDProdottoChanged();
    partial void OnDescrTagliaChanging(string value);
    partial void OnDescrTagliaChanged();
    partial void OnPrezzoChanging(decimal value);
    partial void OnPrezzoChanged();
    partial void OnScontoPercChanging(int value);
    partial void OnScontoPercChanged();
    partial void OnScontoEuroChanging(decimal value);
    partial void OnScontoEuroChanged();
    partial void OnTotaleChanging(decimal value);
    partial void OnTotaleChanged();
    partial void OnCodiceChanging(string value);
    partial void OnCodiceChanged();
    #endregion
		
		public ProdottiTaglie()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_IDProdotto", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int IDProdotto
		{
			get
			{
				return this._IDProdotto;
			}
			set
			{
				if ((this._IDProdotto != value))
				{
					this.OnIDProdottoChanging(value);
					this.SendPropertyChanging();
					this._IDProdotto = value;
					this.SendPropertyChanged("IDProdotto");
					this.OnIDProdottoChanged();
				}
			}
		}
		
		[Column(Storage="_DescrTaglia", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string DescrTaglia
		{
			get
			{
				return this._DescrTaglia;
			}
			set
			{
				if ((this._DescrTaglia != value))
				{
					this.OnDescrTagliaChanging(value);
					this.SendPropertyChanging();
					this._DescrTaglia = value;
					this.SendPropertyChanged("DescrTaglia");
					this.OnDescrTagliaChanged();
				}
			}
		}
		
		[Column(Storage="_Prezzo", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=4)]
		public decimal Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[Column(Storage="_ScontoPerc", DbType="Int NOT NULL")]
		[DataMember(Order=5)]
		public int ScontoPerc
		{
			get
			{
				return this._ScontoPerc;
			}
			set
			{
				if ((this._ScontoPerc != value))
				{
					this.OnScontoPercChanging(value);
					this.SendPropertyChanging();
					this._ScontoPerc = value;
					this.SendPropertyChanged("ScontoPerc");
					this.OnScontoPercChanged();
				}
			}
		}
		
		[Column(Storage="_ScontoEuro", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=6)]
		public decimal ScontoEuro
		{
			get
			{
				return this._ScontoEuro;
			}
			set
			{
				if ((this._ScontoEuro != value))
				{
					this.OnScontoEuroChanging(value);
					this.SendPropertyChanging();
					this._ScontoEuro = value;
					this.SendPropertyChanged("ScontoEuro");
					this.OnScontoEuroChanged();
				}
			}
		}
		
		[Column(Storage="_Totale", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=7)]
		public decimal Totale
		{
			get
			{
				return this._Totale;
			}
			set
			{
				if ((this._Totale != value))
				{
					this.OnTotaleChanging(value);
					this.SendPropertyChanging();
					this._Totale = value;
					this.SendPropertyChanged("Totale");
					this.OnTotaleChanged();
				}
			}
		}
		
		[Column(Storage="_Codice", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=8)]
		public string Codice
		{
			get
			{
				return this._Codice;
			}
			set
			{
				if ((this._Codice != value))
				{
					this.OnCodiceChanging(value);
					this.SendPropertyChanging();
					this._Codice = value;
					this.SendPropertyChanged("Codice");
					this.OnCodiceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.Prodotti")]
	[DataContract()]
	public partial class Prodotti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Codice;
		
		private string _Nome;
		
		private string _Keywords;
		
		private string _DescrizioneLunga;
		
		private decimal _Prezzo;
		
		private int _IDAliquotaIva;
		
		private System.Nullable<int> _UnitaDiMisura;
		
		private System.Nullable<int> _Giacenza;
		
		private System.Nullable<int> _LivRiordino;
		
		private int _ScontoPercent;
		
		private decimal _ScontoEuro;
		
		private decimal _Totale;
		
		private bool _IsOmaggio;
		
		private decimal _RangeOmaggio;
		
		private bool _Attivo;
		
		private System.Nullable<System.DateTime> _DataInserimento;
		
		private string _DescrTaglia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodiceChanging(string value);
    partial void OnCodiceChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnDescrizioneLungaChanging(string value);
    partial void OnDescrizioneLungaChanged();
    partial void OnPrezzoChanging(decimal value);
    partial void OnPrezzoChanged();
    partial void OnIDAliquotaIvaChanging(int value);
    partial void OnIDAliquotaIvaChanged();
    partial void OnUnitaDiMisuraChanging(System.Nullable<int> value);
    partial void OnUnitaDiMisuraChanged();
    partial void OnGiacenzaChanging(System.Nullable<int> value);
    partial void OnGiacenzaChanged();
    partial void OnLivRiordinoChanging(System.Nullable<int> value);
    partial void OnLivRiordinoChanged();
    partial void OnScontoPercentChanging(int value);
    partial void OnScontoPercentChanged();
    partial void OnScontoEuroChanging(decimal value);
    partial void OnScontoEuroChanged();
    partial void OnTotaleChanging(decimal value);
    partial void OnTotaleChanged();
    partial void OnIsOmaggioChanging(bool value);
    partial void OnIsOmaggioChanged();
    partial void OnRangeOmaggioChanging(decimal value);
    partial void OnRangeOmaggioChanged();
    partial void OnAttivoChanging(bool value);
    partial void OnAttivoChanged();
    partial void OnDataInserimentoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataInserimentoChanged();
    partial void OnDescrTagliaChanging(string value);
    partial void OnDescrTagliaChanged();
    #endregion
		
		public Prodotti()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Codice", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Codice
		{
			get
			{
				return this._Codice;
			}
			set
			{
				if ((this._Codice != value))
				{
					this.OnCodiceChanging(value);
					this.SendPropertyChanging();
					this._Codice = value;
					this.SendPropertyChanged("Codice");
					this.OnCodiceChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_Keywords", DbType="VarChar(100)")]
		[DataMember(Order=4)]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[Column(Storage="_DescrizioneLunga", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=5)]
		public string DescrizioneLunga
		{
			get
			{
				return this._DescrizioneLunga;
			}
			set
			{
				if ((this._DescrizioneLunga != value))
				{
					this.OnDescrizioneLungaChanging(value);
					this.SendPropertyChanging();
					this._DescrizioneLunga = value;
					this.SendPropertyChanged("DescrizioneLunga");
					this.OnDescrizioneLungaChanged();
				}
			}
		}
		
		[Column(Storage="_Prezzo", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=6)]
		public decimal Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[Column(Storage="_IDAliquotaIva", DbType="Int NOT NULL")]
		[DataMember(Order=7)]
		public int IDAliquotaIva
		{
			get
			{
				return this._IDAliquotaIva;
			}
			set
			{
				if ((this._IDAliquotaIva != value))
				{
					this.OnIDAliquotaIvaChanging(value);
					this.SendPropertyChanging();
					this._IDAliquotaIva = value;
					this.SendPropertyChanged("IDAliquotaIva");
					this.OnIDAliquotaIvaChanged();
				}
			}
		}
		
		[Column(Storage="_UnitaDiMisura", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> UnitaDiMisura
		{
			get
			{
				return this._UnitaDiMisura;
			}
			set
			{
				if ((this._UnitaDiMisura != value))
				{
					this.OnUnitaDiMisuraChanging(value);
					this.SendPropertyChanging();
					this._UnitaDiMisura = value;
					this.SendPropertyChanged("UnitaDiMisura");
					this.OnUnitaDiMisuraChanged();
				}
			}
		}
		
		[Column(Storage="_Giacenza", DbType="Int")]
		[DataMember(Order=9)]
		public System.Nullable<int> Giacenza
		{
			get
			{
				return this._Giacenza;
			}
			set
			{
				if ((this._Giacenza != value))
				{
					this.OnGiacenzaChanging(value);
					this.SendPropertyChanging();
					this._Giacenza = value;
					this.SendPropertyChanged("Giacenza");
					this.OnGiacenzaChanged();
				}
			}
		}
		
		[Column(Storage="_LivRiordino", DbType="Int")]
		[DataMember(Order=10)]
		public System.Nullable<int> LivRiordino
		{
			get
			{
				return this._LivRiordino;
			}
			set
			{
				if ((this._LivRiordino != value))
				{
					this.OnLivRiordinoChanging(value);
					this.SendPropertyChanging();
					this._LivRiordino = value;
					this.SendPropertyChanged("LivRiordino");
					this.OnLivRiordinoChanged();
				}
			}
		}
		
		[Column(Storage="_ScontoPercent", DbType="Int NOT NULL")]
		[DataMember(Order=11)]
		public int ScontoPercent
		{
			get
			{
				return this._ScontoPercent;
			}
			set
			{
				if ((this._ScontoPercent != value))
				{
					this.OnScontoPercentChanging(value);
					this.SendPropertyChanging();
					this._ScontoPercent = value;
					this.SendPropertyChanged("ScontoPercent");
					this.OnScontoPercentChanged();
				}
			}
		}
		
		[Column(Storage="_ScontoEuro", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=12)]
		public decimal ScontoEuro
		{
			get
			{
				return this._ScontoEuro;
			}
			set
			{
				if ((this._ScontoEuro != value))
				{
					this.OnScontoEuroChanging(value);
					this.SendPropertyChanging();
					this._ScontoEuro = value;
					this.SendPropertyChanged("ScontoEuro");
					this.OnScontoEuroChanged();
				}
			}
		}
		
		[Column(Storage="_Totale", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=13)]
		public decimal Totale
		{
			get
			{
				return this._Totale;
			}
			set
			{
				if ((this._Totale != value))
				{
					this.OnTotaleChanging(value);
					this.SendPropertyChanging();
					this._Totale = value;
					this.SendPropertyChanged("Totale");
					this.OnTotaleChanged();
				}
			}
		}
		
		[Column(Storage="_IsOmaggio", DbType="Bit NOT NULL")]
		[DataMember(Order=14)]
		public bool IsOmaggio
		{
			get
			{
				return this._IsOmaggio;
			}
			set
			{
				if ((this._IsOmaggio != value))
				{
					this.OnIsOmaggioChanging(value);
					this.SendPropertyChanging();
					this._IsOmaggio = value;
					this.SendPropertyChanged("IsOmaggio");
					this.OnIsOmaggioChanged();
				}
			}
		}
		
		[Column(Storage="_RangeOmaggio", DbType="Decimal(10,2) NOT NULL")]
		[DataMember(Order=15)]
		public decimal RangeOmaggio
		{
			get
			{
				return this._RangeOmaggio;
			}
			set
			{
				if ((this._RangeOmaggio != value))
				{
					this.OnRangeOmaggioChanging(value);
					this.SendPropertyChanging();
					this._RangeOmaggio = value;
					this.SendPropertyChanged("RangeOmaggio");
					this.OnRangeOmaggioChanged();
				}
			}
		}
		
		[Column(Storage="_Attivo", DbType="Bit NOT NULL")]
		[DataMember(Order=16)]
		public bool Attivo
		{
			get
			{
				return this._Attivo;
			}
			set
			{
				if ((this._Attivo != value))
				{
					this.OnAttivoChanging(value);
					this.SendPropertyChanging();
					this._Attivo = value;
					this.SendPropertyChanged("Attivo");
					this.OnAttivoChanged();
				}
			}
		}
		
		[Column(Storage="_DataInserimento", DbType="DateTime")]
		[DataMember(Order=17)]
		public System.Nullable<System.DateTime> DataInserimento
		{
			get
			{
				return this._DataInserimento;
			}
			set
			{
				if ((this._DataInserimento != value))
				{
					this.OnDataInserimentoChanging(value);
					this.SendPropertyChanging();
					this._DataInserimento = value;
					this.SendPropertyChanged("DataInserimento");
					this.OnDataInserimentoChanged();
				}
			}
		}
		
		[Column(Storage="_DescrTaglia", DbType="VarChar(50)")]
		[DataMember(Order=18)]
		public string DescrTaglia
		{
			get
			{
				return this._DescrTaglia;
			}
			set
			{
				if ((this._DescrTaglia != value))
				{
					this.OnDescrTagliaChanging(value);
					this.SendPropertyChanging();
					this._DescrTaglia = value;
					this.SendPropertyChanged("DescrTaglia");
					this.OnDescrTagliaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.ProdottiRecensioni")]
	[DataContract()]
	public partial class ProdottiRecensioni : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDUtente;
		
		private int _IDProdotto;
		
		private string _Titolo;
		
		private string _Nome;
		
		private int _Voto;
		
		private string _Recensione;
		
		private System.DateTime _DataInserimento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDUtenteChanging(int value);
    partial void OnIDUtenteChanged();
    partial void OnIDProdottoChanging(int value);
    partial void OnIDProdottoChanged();
    partial void OnTitoloChanging(string value);
    partial void OnTitoloChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnVotoChanging(int value);
    partial void OnVotoChanged();
    partial void OnRecensioneChanging(string value);
    partial void OnRecensioneChanged();
    partial void OnDataInserimentoChanging(System.DateTime value);
    partial void OnDataInserimentoChanged();
    #endregion
		
		public ProdottiRecensioni()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_IDUtente", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int IDUtente
		{
			get
			{
				return this._IDUtente;
			}
			set
			{
				if ((this._IDUtente != value))
				{
					this.OnIDUtenteChanging(value);
					this.SendPropertyChanging();
					this._IDUtente = value;
					this.SendPropertyChanged("IDUtente");
					this.OnIDUtenteChanged();
				}
			}
		}
		
		[Column(Storage="_IDProdotto", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int IDProdotto
		{
			get
			{
				return this._IDProdotto;
			}
			set
			{
				if ((this._IDProdotto != value))
				{
					this.OnIDProdottoChanging(value);
					this.SendPropertyChanging();
					this._IDProdotto = value;
					this.SendPropertyChanged("IDProdotto");
					this.OnIDProdottoChanged();
				}
			}
		}
		
		[Column(Storage="_Titolo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string Titolo
		{
			get
			{
				return this._Titolo;
			}
			set
			{
				if ((this._Titolo != value))
				{
					this.OnTitoloChanging(value);
					this.SendPropertyChanging();
					this._Titolo = value;
					this.SendPropertyChanged("Titolo");
					this.OnTitoloChanged();
				}
			}
		}
		
		[Column(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_Voto", DbType="Int NOT NULL")]
		[DataMember(Order=6)]
		public int Voto
		{
			get
			{
				return this._Voto;
			}
			set
			{
				if ((this._Voto != value))
				{
					this.OnVotoChanging(value);
					this.SendPropertyChanging();
					this._Voto = value;
					this.SendPropertyChanged("Voto");
					this.OnVotoChanged();
				}
			}
		}
		
		[Column(Storage="_Recensione", DbType="VarChar(450) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string Recensione
		{
			get
			{
				return this._Recensione;
			}
			set
			{
				if ((this._Recensione != value))
				{
					this.OnRecensioneChanging(value);
					this.SendPropertyChanging();
					this._Recensione = value;
					this.SendPropertyChanged("Recensione");
					this.OnRecensioneChanged();
				}
			}
		}
		
		[Column(Storage="_DataInserimento", DbType="DateTime NOT NULL")]
		[DataMember(Order=8)]
		public System.DateTime DataInserimento
		{
			get
			{
				return this._DataInserimento;
			}
			set
			{
				if ((this._DataInserimento != value))
				{
					this.OnDataInserimentoChanging(value);
					this.SendPropertyChanging();
					this._DataInserimento = value;
					this.SendPropertyChanged("DataInserimento");
					this.OnDataInserimentoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.ProdottiVariazioni")]
	[DataContract()]
	public partial class ProdottiVariazioni
	{
		
		private int _ID;
		
		private int _IDProdotto;
		
		private int _IDVariazioni;
		
		public ProdottiVariazioni()
		{
		}
		
		[Column(Storage="_ID", DbType="Int NOT NULL")]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[Column(Storage="_IDProdotto", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int IDProdotto
		{
			get
			{
				return this._IDProdotto;
			}
			set
			{
				if ((this._IDProdotto != value))
				{
					this._IDProdotto = value;
				}
			}
		}
		
		[Column(Storage="_IDVariazioni", DbType="Int NOT NULL")]
		[DataMember(Order=3)]
		public int IDVariazioni
		{
			get
			{
				return this._IDVariazioni;
			}
			set
			{
				if ((this._IDVariazioni != value))
				{
					this._IDVariazioni = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.Variazioni")]
	[DataContract()]
	public partial class Variazioni : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Descrizione;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    #endregion
		
		public Variazioni()
		{
			this.Initialize();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Descrizione", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
